on: 
  workflow_dispatch:
    inputs:
      deploy_target:
        description: 'deploy target'
        required: true
        type: choice
        options:
        - dev
        - tst
        - prd

name: Infrastructure as Code

run-name: Deploy to ${{ inputs.deploy_target }} by @${{ github.actor }}

permissions:
  id-token: write
  contents: read

jobs:
  deploy-infra-dev:
    runs-on: ubuntu-latest
    environment: dev

    steps:
    - name: Checkout Code
      uses: actions/checkout@main

    - name: Azure Login
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        enable-AzPSSession: true  
        
    - name: Bicep Deploy
      id: bicep
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
        resourceGroupName: demolake-dev-rg
        template: ../demolake/deploy/infra/main.bicep
        parameters: 'environmentName=dev'
        failOnStdErr: false
    
    - name: Install Powershell Modules
      shell: pwsh
      run: |
        Set-PSRepository PSGallery -InstallationPolicy Trusted
        Install-Module -Name az.resources
        Install-Module -Name databricksps

    - name: Initialize Databricks
      shell: pwsh
      run: |
        $keyvaultName = '${{ steps.bicep.outputs.keyvaultName }}'
        $keyvaultSecret = $(az keyvault secret show --name  'applicationkey' --vault-name "$($keyvaultName)" | ConvertFrom-json | Select-Object -exp value )
        $resourceGroupName = 'demolake-dev-rg'
        $workspaceName = 'demolake-dev-dbr'
        $azureResourceId = "/subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/$resourceGroupName/providers/Microsoft.Databricks/workspaces/$workspaceName"
        Set-DatabricksEnvironment -UsingAzContext -AzureResourceID $azureResourceId
        if (-Not (Get-DatabrickSsecretScope | where-object Name -eq 'default')) {Add-DatabricksSecretScope  -ScopeName 'default'}
        if (-Not (Get-DatabricksSecret -ScopeName 'default' | where name -eq 'lake')) {Add-DatabricksSecret -ScopeName 'default' -SecretName 'lake' -StringValue $keyvaultSecret}
        Add-DatabricksWorkspaceDirectory -Path "/admin"


  deploy-infra-tst:
    needs: deploy-infra-dev
    if: ${{ github.event.inputs.deploy_target == 'tst' || github.event.inputs.deploy_target == 'prd' }}
    runs-on: ubuntu-latest
    environment: tst

    steps:
    - name: Checkout Code
      uses: actions/checkout@main

    - name: Azure Login
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Bicep Deploy
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
        resourceGroupName: demolake-tst-rg
        template: ../demolake/deploy/infra/main.bicep
        parameters: 'environmentName=tst'        
        failOnStdErr: false

  deploy-infra-prd:
    needs: [deploy-infra-dev, deploy-infra-tst]
    if: ${{ github.event.inputs.deploy_target == 'prd' }}
    runs-on: ubuntu-latest
    environment: prd

    steps:
    - name: Checkout Code
      uses: actions/checkout@main

    - name: Azure Login
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Bicep Deploy
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
        resourceGroupName: demolake-prd-rg
        template: ../demolake/deploy/infra/main.bicep
        parameters: 'environmentName=prd'        
        failOnStdErr: false
